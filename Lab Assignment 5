Bar Plot for Survival by Embarked.





import pandas as pd

import matplotlib.pyplot as plt



# Load the Titanic dataset

data = pd.read_csv('Titanic-Dataset.csv')



# Data Cleaning

data['Age'].fillna(data['Age'].median(), inplace=True)

data['Embarked'].fillna(data['Embarked'].mode()[0], inplace=True)

data.drop('Cabin', axis=1, inplace=True)



# Convert categorical features to numeric

data['Sex'] = data['Sex'].map({'male': 0, 'female': 1})

data = pd.get_dummies(data, columns=['Embarked'], drop_first=True)





grouped = data.groupby('Embarked_Q')['Survived'].value_counts().unstack().fillna(0)

grouped.columns = ['Not Survived', 'Survived']

grouped.plot(kind='bar', stacked=True)

plt.title('Survival by Embarked')

plt.xlabel('Embarked')

plt.ylabel('Count')

plt.legend(title=None)

plt.show()







Bar Plot for Survival by Gender.





import pandas as pd

import matplotlib.pyplot as plt



# Load the Titanic dataset

data = pd.read_csv('Titanic-Dataset.csv')



# Data Cleaning

data['Age'].fillna(data['Age'].median(), inplace=True)

data['Embarked'].fillna(data['Embarked'].mode()[0], inplace=True)

data.drop('Cabin', axis=1, inplace=True)



# Convert categorical features to numeric

data['Sex'] = data['Sex'].map({'male': 0, 'female': 1})

data = pd.get_dummies(data, columns=['Embarked'], drop_first=True)





survival_by_gender = data.groupby('Sex')['Survived'].value_counts().unstack().fillna(0)

survival_by_gender.columns = ['Not Survived', 'Survived']

survival_by_gender.index = ['0', '1']

survival_by_gender.plot(kind='bar', stacked=True)

plt.title('Survival by Gender')

plt.xlabel('Gender')

plt.ylabel('Count')

plt.legend(title=None)

plt.show() 


Bar Plot for Survival by pclass.





import pandas as pd

import matplotlib.pyplot as plt



# Load the Titanic dataset

data = pd.read_csv('Titanic-Dataset.csv')



# Data Cleaning

data['Age'].fillna(data['Age'].median(), inplace=True)

data['Embarked'].fillna(data['Embarked'].mode()[0], inplace=True)

data.drop('Cabin', axis=1, inplace=True)



# Convert categorical features to numeric

data['Sex'] = data['Sex'].map({'male': 0, 'female': 1})

data = pd.get_dummies(data, columns=['Embarked'], drop_first=True)



survival_by_class = data.groupby(['Pclass'])['Survived'].value_counts().unstack().fillna(0)

survival_by_class.columns = ['Not Survived', 'Survived']

survival_by_class.plot(kind='bar', stacked=True)

plt.title('Survival by Pclass')

plt.xlabel('Pclass')

plt.ylabel('Count')

plt.legend(title=None)

plt.show()




Bar plot of survival rate of passenger 5.2.3





import pandas as pd

import matplotlib.pyplot as plt



# Load the Titanic dataset

data = pd.read_csv('Titanic-Dataset.csv')



# Data Cleaning

data['Age'].fillna(data['Age'].median(), inplace=True)

data['Embarked'].fillna(data['Embarked'].mode()[0], inplace=True)

data.drop('Cabin', axis=1, inplace=True)



# Convert categorical features to numeric

data['Sex'] = data['Sex'].map({'male': 0, 'female': 1})

data = pd.get_dummies(data, columns=['Embarked'], drop_first=True)



# Write your code here for Bar Plot for Survival Rate

survival_count = data['Survived'].value_counts()

survival_count.plot(kind='bar')

plt.title('Survival Count')

plt.xlabel('Survived')

plt.ylabel('Count')

plt.show()


Box Plot for Age by Survived.





import pandas as pd

import matplotlib.pyplot as plt



# Load the Titanic dataset

data = pd.read_csv('Titanic-Dataset.csv')



# Data Cleaning

data['Age'].fillna(data['Age'].median(), inplace=True)

data['Embarked'].fillna(data['Embarked'].mode()[0], inplace=True)

data.drop('Cabin', axis=1, inplace=True)



# Convert categorical features to numeric

data['Sex'] = data['Sex'].map({'male': 0, 'female': 1})

data = pd.get_dummies(data, columns=['Embarked'], drop_first=True)



plt.figure(figsize=(8, 6))

data.boxplot(column='Age', by='Survived')

plt.suptitle('')  # Removes default boxplot title

plt.title('Age by Survival')

plt.xlabel('Survived')

plt.ylabel('Age')

plt.show()



Box Plot for Fare by Pclass.





import pandas as pd

import matplotlib.pyplot as plt



# Load the Titanic dataset

data = pd.read_csv('Titanic-Dataset.csv')



# Data Cleaning

data['Age'].fillna(data['Age'].median(), inplace=True)

data['Embarked'].fillna(data['Embarked'].mode()[0], inplace=True)

data.drop('Cabin', axis=1, inplace=True)



# Convert categorical features to numeric

data['Sex'] = data['Sex'].map({'male': 0, 'female': 1})

data = pd.get_dummies(data, columns=['Embarked'], drop_first=True)



# Box Plot for Fare by Pclass

plt.figure(figsize=(8, 6))

data.boxplot(column='Fare', by='Pclass')

plt.suptitle('')  # Removes default boxplot title

plt.title('Fare by Pclass')

plt.xlabel('Pclass')

plt.ylabel('Fare')

plt.show()


Box plot for Age Distribution.





import pandas as pd

import matplotlib.pyplot as plt



# Load the Titanic dataset

data = pd.read_csv('Titanic-Dataset.csv')



# Data Cleaning

data['Age'].fillna(data['Age'].median(), inplace=True)

data['Embarked'].fillna(data['Embarked'].mode()[0], inplace=True)

data.drop('Cabin', axis=1, inplace=True)



# Convert categorical features to numeric

data['Sex'] = data['Sex'].map({'male': 0, 'female': 1})

data = pd.get_dummies(data, columns=['Embarked'], drop_first=True)



plt.figure(figsize=(8, 6))

data.boxplot(column='Age', by='Pclass')

plt.suptitle('')

plt.title('Age by Pclass')

plt.xlabel('Pclass')

plt.ylabel('Age')

plt.show()





Histogram of passenger information of Titanic 5.2.2



import pandas as pd

import matplotlib.pyplot as plt



# Load the Titanic dataset

data = pd.read_csv('Titanic-Dataset.csv')



# Data Cleaning

data['Age'].fillna(data['Age'].median(), inplace=True)

data['Embarked'].fillna(data['Embarked'].mode()[0], inplace=True)

data.drop('Cabin', axis=1, inplace=True)



# Convert categorical features to numeric

data['Sex'] = data['Sex'].map({'male': 0, 'female': 1})

data = pd.get_dummies(data, columns=['Embarked'], drop_first=True)



# Write your code here for Histogram

plt.hist(data['Age'],bins=30,edgecolor='k' )

plt.xlabel('Age')

plt.ylabel('Frequency')

plt.title('Age Distribution')

plt.show()


Scatter Plot for Age vs. Fare.



import pandas as pd

import matplotlib.pyplot as plt



# Load the Titanic dataset

data = pd.read_csv('Titanic-Dataset.csv')



# Data Cleaning

data['Age'].fillna(data['Age'].median(), inplace=True)

data['Embarked'].fillna(data['Embarked'].mode()[0], inplace=True)

data.drop('Cabin', axis=1, inplace=True)



# Convert categorical features to numeric

data['Sex'] = data['Sex'].map({'male': 0, 'female': 1})

data = pd.get_dummies(data, columns=['Embarked'], drop_first=True)



# Write your code here for Box Plot for Fare by Pclass

plt.figure()

colors={0: 'red', 1: 'blue'}

plt.scatter(data['Age'], data['Fare'])

plt.title('Age vs. Fare')

plt.xlabel('Age')

plt.ylabel('Fare')

plt.show()



Scatter plot for Age vs Fare by Survived.





import pandas as pd

import matplotlib.pyplot as plt



# Load the Titanic dataset

data = pd.read_csv('Titanic-Dataset.csv')



# Data Cleaning

data['Age'].fillna(data['Age'].median(), inplace=True)

data['Embarked'].fillna(data['Embarked'].mode()[0], inplace=True)

data.drop('Cabin', axis=1, inplace=True)



# Convert categorical features to numeric

data['Sex'] = data['Sex'].map({'male': 0, 'female': 1})

data = pd.get_dummies(data, columns=['Embarked'], drop_first=True)



# Write your code here for Scatter Plot for Age vs. Fare by Survived

plt.figure()

colors={0: 'red', 1: 'blue'}

plt.scatter(data['Age'], data['Fare'], c=data['Survived'].apply(lambda x:colors[x]))

plt.title('Age vs. Fare by Survival')

plt.xlabel('Age')

plt.ylabel('Fare')

plt.show()



Titanic Dataset 5.2.1





import pandas as pd

import matplotlib.pyplot as plt



# Load the Titanic dataset from the CSV file

df = pd.read_csv('titanic.csv')



# Set up the figure for 5 subplots

fig, axes = plt.subplots(3, 2, figsize=(12, 12))



# write the code..

import pandas as pd

import matplotlib.pyplot as plt



# Load the Titanic dataset from the CSV file

df = pd.read_csv('titanic.csv')



# Set up the figure for 5 subplots

fig, axes = plt.subplots(3, 2, figsize=(12, 12))



# Plot 1: Count of passengers by class

axes[0, 0].bar(df['Pclass'].value_counts().index, df['Pclass'].value_counts(), color='skyblue')

axes[0, 0].set_title("Passenger Class Distribution")

axes[0, 0].set_xlabel("Pclass")

axes[0, 0].set_ylabel("Count")



# Plot 2: Gender distribution

axes[0, 1].pie(df['Gender'].value_counts(), labels=df['Gender'].value_counts().index, autopct='%1.1f%%', colors=['lightblue', 'lightcoral'])

axes[0, 1].set_title("Gender Distribution")



# Plot 3: Age distribution

axes[1, 0].hist(df['Age'].dropna(), bins=8, color='lightgreen', edgecolor='black')

axes[1, 0].set_title("Age Distribution")

axes[1, 0].set_xlabel("Age")

axes[1, 0].set_ylabel("Frequency")



# Plot 4: Survival count

axes[1, 1].bar(df['Survived'].value_counts().index, df['Survived'].value_counts(), color=['lightblue', 'lightcoral'])

axes[1, 1].set_title("Survival Count")

axes[1, 1].set_xlabel("Survived (0 = No, 1 = Yes)")

axes[1, 1].set_ylabel("Count")



# Plot 5: Fare vs Age

axes[2, 0].scatter(df['Age'], df['Fare'], color='orange', edgecolors='black')

axes[2, 0].set_title("Fare vs Age")

axes[2, 0].set_xlabel("Age")

axes[2, 0].set_ylabel("Fare")



plt.tight_layout()

plt.show()








